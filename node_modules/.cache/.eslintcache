[{"/Users/ritahan/Documents/ShopifyChallange/src/index.js":"1","/Users/ritahan/Documents/ShopifyChallange/src/App.js":"2","/Users/ritahan/Documents/ShopifyChallange/src/reportWebVitals.js":"3","/Users/ritahan/Documents/ShopifyChallange/src/NewPage.js":"4","/Users/ritahan/Documents/ShopifyChallange/src/Post.js":"5"},{"size":500,"mtime":1642127006712,"results":"6","hashOfConfig":"7"},{"size":297,"mtime":1642454601452,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1642127006712,"results":"9","hashOfConfig":"7"},{"size":2534,"mtime":1642522953686,"results":"10","hashOfConfig":"7"},{"size":1897,"mtime":1642454614263,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y1w83x",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ritahan/Documents/ShopifyChallange/src/index.js",[],"/Users/ritahan/Documents/ShopifyChallange/src/App.js",["23"],"/Users/ritahan/Documents/ShopifyChallange/src/reportWebVitals.js",[],"/Users/ritahan/Documents/ShopifyChallange/src/NewPage.js",["24"],"import React, {useEffect, useState} from \"react\";\nimport Post from \"./Post\";\n\nconst NewPage = () => {\n    const [posts, setPosts] = useState([{}]);\n\n    useEffect(()=>{\n        try{\n            fetch ('https://api.nasa.gov/planetary/apod?api_key=az5igQ5tQdFOl9MdFLkyR8wzZAiyEMAAsSZfRxd4&count=20&')\n            .then(response => response.json())\n            .then(json => {\n                console.log(json)\n\n                const receivedData = json;\n                setPosts(receivedData);\n                document.getElementById(\"loader\").style.visibility = \"hidden\";\n\n\n            })\n            }catch(error){\n                console.log(error);\n        }\n\n},[]);\n\n\n\n    let elements = [];\n\n    const showPosts = () => {\n        console.log('showPosts');\n\n\n\n        for (let i = 0; i < posts.length; i++){\n                if(posts[i].media_type == \"image\"){\n                    console.log('image');\n                    elements.push(\n                        <Post \n                        title = {posts[i].title}\n                        date = {posts[i].date}\n                        explanation = { posts[i].explanation}\n                        copyright = { posts[i].copyright}\n                        url = { posts[i].hdurl}\n                        mediaType = \"image\"\n                        number = {i}\n                        />);\n                }\n                else{\n                    console.log('video');\n                    elements.push(\n                        <Post \n                        title = {posts[i].title}\n                        date = {posts[i].date}\n                        explanation = { posts[i].explanation}\n                        copyright = { posts[i].copyright}\n                        url = { posts[i].url}\n                        mediaType = \"video\"\n                        number = {i}\n                        />);\n                };\n                // setLoaded(true);\n                \n                \n        }\n        console.log(elements);\n\n    };\n\n    \n    return(\n        <div>\n            <div id = \"loader\" className = \"loader\">\n                    <div></div>\n\n            </div>\n\n\n                \n                <div className = \"content\">\n                    <p className = \"name\">Spacestgram</p>\n                    <p className = \"subName\">Brought to you by NASA's Astronomy Photo of the Dat (APOD) API</p>\n                    \n                    {showPosts()}\n\n                    {elements}\n                </div>\n\n\n        </div>\n\n    );\n}\n\nexport default NewPage;","/Users/ritahan/Documents/ShopifyChallange/src/Post.js",["25","26","27","28","29","30"],{"ruleId":"31","severity":1,"message":"32","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":12},{"ruleId":"35","severity":1,"message":"36","line":36,"column":40,"nodeType":"37","messageId":"38","endLine":36,"endColumn":42},{"ruleId":"31","severity":1,"message":"39","line":1,"column":21,"nodeType":"33","messageId":"34","endLine":1,"endColumn":24},{"ruleId":"31","severity":1,"message":"40","line":1,"column":26,"nodeType":"33","messageId":"34","endLine":1,"endColumn":32},{"ruleId":"35","severity":1,"message":"36","line":7,"column":36,"nodeType":"37","messageId":"38","endLine":7,"endColumn":38},{"ruleId":"35","severity":1,"message":"36","line":19,"column":19,"nodeType":"37","messageId":"38","endLine":19,"endColumn":21},{"ruleId":"41","severity":1,"message":"42","line":22,"column":17,"nodeType":"43","endLine":22,"endColumn":87},{"ruleId":"44","severity":1,"message":"45","line":38,"column":17,"nodeType":"43","endLine":38,"endColumn":87},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Row' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property."]